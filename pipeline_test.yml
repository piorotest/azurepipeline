variables:
   URL_SHELL: $(URL)
   API_KEY_SHELL: $(API_KEY)
   PIPENAME_SHELL: $(Build.BuildNumber)

pool:
  name: Azure Pipelines

resources:
  repositories:
  - repository: templates
    type: git
    name: pipeline_test/pipeline_test
    ref: refs/heads/main


extends: 
  template: pipedb_runtest.yml@templates
  parameters:
    usersteps:

    - task: Bash@3
      inputs:
        targetType: 'inline'
        script: |
              DBNAME="pipedb_$(PIPENAME_SHELL)"
              export DBNAME=${DBNAME/./}
              echo "##vso[task.setvariable variable=DBNAMEJOB]$DBNAME"
              docker run -v $(Build.SourcesDirectory)/azurepipeline/schema:/liquibase/changelog liquibase/liquibase:latest --changeLogFile changelog/main.xml --url "jdbc:sqlserver://uvo1sflnv1auw79mvq4.vm.cld.sr;Port=1434;DatabaseName=$DBNAME;encrypt=true;trustServerCertificate=true" --username lb --password lb  update
      displayName: Deploy code

    - task: Bash@3
      inputs:
        targetType: 'inline'
        script: |
          sqlcmd -d $(DBNAMEJOB) -S uvo1sflnv1auw79mvq4.vm.cld.sr,1434 -U lb -P lb  -Q "select count(*) from test_table"
      displayName: Pre destrictive test

    - task: Bash@3
      inputs:
        targetType: 'inline'
        script: |
          sqlcmd -d $(DBNAMEJOB) -S uvo1sflnv1auw79mvq4.vm.cld.sr,1434 -U lb -P lb  -Q "truncate table test_table"
      displayName: Run destrictive test 

    - task: Bash@3
      inputs:
        targetType: 'inline'
        script: |
          sqlcmd -d $(DBNAMEJOB) -S uvo1sflnv1auw79mvq4.vm.cld.sr,1434 -U lb -P lb  -Q "select count(*) from test_table"
      displayName: Post destrictive test